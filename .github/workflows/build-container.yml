name: Test building container

on:
  push:
    branches:
      - "docker"
  workflow_dispatch:
    inputs:
      no-cache:
        description: "Build docker images with no cache"
        default: false
        required: false
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pipenv-lock:
    name: Update Pipfile.lock
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v4
      with:
        python-version-file: .python-version
    - name: Check for changes
      id: check_changes
      run: |
        git fetch --no-tags --depth=1 origin +refs/heads/main
        CHANGES=$(git diff --name-only HEAD..FETCH_HEAD -- Pipfile)
        echo changes_found=$([[ -z $CHANGES ]] && echo false || echo true) >> $GITHUB_OUTPUT
    - name: Update Pipfile.lock
      if: ${{ steps.check_changes.outputs.changes_found == 'true' }}
      run: |
        pip3 install pipenv
        pipenv lock
    - name: Commit changes
      if: ${{ steps.check_changes.outputs.changes_found == 'true' }}
      run: |
        git config --local user.name "github-actions[bot]"
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git add Pipfile.lock
        git commit -m "Update Pipfile.lock"
        git push
    - name: Upload Pipfile.lock
      uses: actions/upload-artifact@v2
      with:
        name: pipenv-lock
        path: Pipfile.lock

  build:
    name: Build and push container
    runs-on: ubuntu-latest
    needs: [pipenv-lock]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        name: pipenv-lock
        path: .
    - uses: docker/setup-qemu-action@v2
    - uses: docker/setup-buildx-action@v2
      with:
        config: .github/buildkit.toml
    - uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - uses: docker/metadata-action@v4
      id: meta
      with:
        # list of Docker images to use as base name for tags
        images: |
          ${{ github.repository }}/musiclm
          ghcr.io/${{ github.repository }}/musiclm
        # generate Docker tags based on the following events/attributes
        tags: |
          type=ref,event=branch
          type=sha
          type=raw,value=latest,enable={{is_default_branch}}

    - uses: docker/build-push-action@v4
      with:
        context: .
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        pull: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
        no-cache: ${{ inputs.no-cache == true }}
        build-args: |
          BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
          VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
          REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
